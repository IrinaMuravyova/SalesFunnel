import time, asyncio
from aiogram import types, F
from aiogram.utils.keyboard import InlineKeyboardBuilder
from loader import db, router_reminders
from aiogram.types import URLInputFile
from config import video_lessons, texts_for_lessons

# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–∞—á–∞–ª —Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ
# —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Å–º–æ—Ç—Ä–µ–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–∏–¥–µ–æ
async def remind_to_watch_this(callback: types.CallbackQuery):
    db.set_status(status_id=2, id = callback.from_user.id)

    # await asyncio.sleep(10) # 1200
    time.sleep(10) # 1200

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–î–∞",
        callback_data="lesson_2"),
        types.InlineKeyboardButton(
        text="–ï—â–µ —Å–º–æ—Ç—Ä—é",
        callback_data="remind5min"))
    await callback.message.answer(text='–¢—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª –≤–∏–¥–µ–æ?',
                                  reply_markup=builder.as_markup())
    
    # await check_status_and_remind_through_10_min(callback = callback) # –µ—Å–ª–∏ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç, —Ç–æ —á–µ—Ä–µ–∑ 10 –º–∏–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏
    # await check_status_and_remind_through_3_hour(callback = callback) # –µ—Å–ª–∏ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç, —Ç–æ —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏

# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç 10 –º–∏–Ω
async def check_status_and_remind_through_10_min(callback: types.CallbackQuery):
    await asyncio.sleep(10) # 600
    if db.get_status_from_user(id=callback.from_user.id) in [2,5]:
        # print(f"db.get_status_from_user(id=callback.from_user.id)={db.get_status_from_user(id=callback.from_user.id)}")
        builder = InlineKeyboardBuilder()
        builder.add(
            types.InlineKeyboardButton(
            text=" 30 –º–∏–Ω—É—Ç",
            callback_data="remind30min"),
            types.InlineKeyboardButton(
            text=" 1 —á–∞—Å",
            callback_data="remind1hour"),
            types.InlineKeyboardButton(
            text=" 2 —á–∞—Å–∞",
            callback_data="remind2hour"),
            types.InlineKeyboardButton(
            text=" 3 —á–∞—Å–∞",
            callback_data="remind3hour"))
        
        await callback.message.answer(text="üöÄ <b>–ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π –ø—Ä–æ—Å–º–æ—Ç—Ä —ç—Ç–æ–≥–æ –≤–∏–¥–µ–æ!</b>"
                                            "\n\n–ò–Ω–∞—á–µ –º–æ–∂–µ—à—å —É–ø—É—Å—Ç–∏—Ç—å<b> —à–∞–Ω—Å –∑–∞–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–ºüá∫üá∏üá¨üáß</b>"
                                            "\n\n<i>–ï—Å–ª–∏ —Å–µ–π—á–∞—Å –Ω–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –º–æ–º–µ–Ω—Ç, –¥–∞–π –∑–Ω–∞—Ç—å</i>" 
                                            "\n\n<b>–∏ —è –Ω–∞–ø–æ–º–Ω—é —Ç–µ–±–µ –ø–æ–∑–∂–µ,</b> —á—Ç–æ–±—ã —Ç—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏–ª —ç—Ç–æ—Ç –≤–∞–∂–Ω—ã–π —É—Ä–æ–∫." 
                                            "\n\n–ì–û–¢–û–í?")
        await callback.message.answer(text="–ù–∞–ø–æ–º–Ω–∏—Ç—å —á–µ—Ä–µ–∑: ",
                                      reply_markup=builder.as_markup())
        
        db.set_status(status_id=4, id = callback.from_user.id) # –±—É–¥–µ—Ç –≤—Ç–æ—Ä–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ

# –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ
@router_reminders.callback_query(F.data == "remind5min")
async def remind_throuht_5min(callback: types.CallbackQuery):
    if db.get_status_from_user(id = callback.from_user.id) == 2:
        db.set_status(status_id=4, id = callback.from_user.id)
        await asyncio.sleep(5) # –∂–¥–µ–º 5 –º–∏–Ω 300 sec
    elif db.get_status_from_user(id = callback.from_user.id) == 4:
        await check_status_and_remind_through_10_min(callback = callback) # –µ—Å–ª–∏ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç, —Ç–æ —á–µ—Ä–µ–∑ 10 –º–∏–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏
        await check_status_and_remind_through_3_hour(callback = callback) # –µ—Å–ª–∏ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç, —Ç–æ —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏

# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç 3 —á–∞—Å–∞
async def check_status_and_remind_through_3_hour(callback: types.CallbackQuery):
    await asyncio.sleep(30) # 10800
    if db.get_status_from_user(id=callback.from_user.id) in [4,5]:
        print(f"db.get_status_from_user(id=callback.from_user.id)={db.get_status_from_user(id=callback.from_user.id)}")
        builder = InlineKeyboardBuilder()
        builder.add(
            types.InlineKeyboardButton(
            text=" 30 –º–∏–Ω—É—Ç",
            callback_data="remind30min"),
            types.InlineKeyboardButton(
            text=" 1 —á–∞—Å",
            callback_data="remind1hour"),
            types.InlineKeyboardButton(
            text=" 2 —á–∞—Å–∞",
            callback_data="remind2hour"),
            types.InlineKeyboardButton(
            text=" 3 —á–∞—Å–∞",
            callback_data="remind3hour"))

        # await callback.message.delete
        await callback.message.answer(text="üåü –¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—á–µ—à—å –æ—Å–≤–æ–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π? ü§î "
                                     "\n\n–Ø –Ω–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–∫ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ <b>—Ä–µ—à–µ–Ω–∏–µ –º–µ–Ω—è—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å –¥–æ–ª–∂–Ω–æ –∏—Å—Ö–æ–¥–∏—Ç—å –æ—Ç —Ç–µ–±—è!</b>"
                                     "\n\n–ù–æ —è –±—ã –Ω–µ —Ö–æ—Ç–µ–ª, —á—Ç–æ–±—ã —Ç—ã —É–ø—É—Å—Ç–∏–ª —ç—Ç–æ—Ç —à–∞–Ω—Å."
                                     "\n\n<b>–ï—Å–ª–∏ —Å–µ–π—á–∞—Å –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ,</b> —è –≥–æ—Ç–æ–≤ –Ω–∞–ø–æ–º–Ω–∏—Ç—å –æ –Ω–µ–º –ø–æ–∑–∂–µ."
                                     "\n\n–ì–û–¢–û–í?")
        await callback.message.answer(text="–ù–∞–ø–æ–º–Ω–∏—Ç—å —á–µ—Ä–µ–∑: ",
                                      reply_markup=builder.as_markup())
        
        db.set_status(status_id=6, id = callback.from_user.id) # –±—É–¥–µ—Ç –≤—Ç–æ—Ä–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ

# –Ω–∞–ø–æ–º–Ω–∏—Ç—å —á–µ—Ä–µ–∑ ...
@router_reminders.callback_query(F.data.in_(["remind30min", "remind1hour", "remind2hour", "remind3hour"]))
async def sent_lesson(callback: types.CallbackQuery):
    callback.message.delete
    match callback.data:
        case "remind30min": 
            period_of_remider = "30 –º–∏–Ω—É—Ç"
            time_sleep = 5 #1800
        case "remind1hour": 
            period_of_remider = "1 —á–∞—Å"
            time_sleep = 3600
        case "remind2hour": 
            period_of_remider = "2 —á–∞—Å–∞"
            time_sleep = 7200
        case "remind3hour": 
            period_of_remider = "3 —á–∞—Å–∞"
            time_sleep = 10800

    await callback.message.answer(text="üïê –û—Ç–ª–∏—á–Ω–æ! "
                                "\n\n<b>–Ø –Ω–∞–ø–æ–º–Ω—é —Ç–µ–±–µ –æ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ </b>" + f"<b>{period_of_remider}</b>")
    time.sleep(time_sleep)

    video_from_url = URLInputFile(video_lessons[db.get_video_id_from_user(id = callback.from_user.id)-1])
    callback.message.video
    await callback.message.answer_video(
        video= video_from_url,
        caption=" "
    )

    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
            text="–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫",
            callback_data="next_lesson")
        )
    text = "üîî –≠—Ç–æ –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï: –≤—Ä–µ–º—è —É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π!\n\n<b>–í–∏–¥–µ–æ —É–∂–µ –∂–¥–µ—Ç —Ç–µ–±—è! üé• </b>\n\n–î–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤—å —Ç–µ—Ç—Ä–∞–¥—å –∏ —Ä—É—á–∫—É! üìí‚úçÔ∏è"
    await callback.message.answer(
            text=text, 
            reply_markup=builder.as_markup()
            )
    await callback.answer()
    
    # –µ—Å–ª–∏ —é–∑–µ—Ä –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –∑–∞–ø—É—Å–∫–∞—é —Ü–∏–∫–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π —Å–Ω–æ–≤–∞
    await check_status_and_remind_through_10_min(callback = callback) # –µ—Å–ª–∏ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç, —Ç–æ —á–µ—Ä–µ–∑ 10 –º–∏–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏
    await check_status_and_remind_through_3_hour(callback = callback) # –µ—Å–ª–∏ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç, —Ç–æ —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏

# # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –∏ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–∏ 3 —á–∞—Å–æ–≤
# async def choose_time_to_remind(message: types.Message):

#     builder = InlineKeyboardBuilder()
#     builder.add(types.InlineKeyboardButton(
#         text="–ù–∞ —Å–≤—è–∑–∏ –ë–µ–±—Ä–∏—Å",
#         callback_data="step1")
#         # ,
#         # types.InlineKeyboardButton(
#         # text="–î–∞–ª—å—à–µ",
#         # callback_data="step1_2")
#     )
#     await message.answer("<b>–¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å –≤—ã—É—á–∏—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π?ü§î –ù–µ –ª—é–±–ª—é —è —É–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å. –í–µ–¥—å –º–µ–Ω—è—Ç—å –∂–∏–∑–Ω—å - —ç—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —Ç–≤–æ–π –≤—ã–±–æ—Ä! –ù–æ –º–Ω–µ —Ç–∞–∫ —Ö–æ—á–µ—Ç—Å—è, —á—Ç–æ–±—ã —Ç—ã –Ω–µ –∑–∞–±—ã–ª –ø—Ä–æ —ç—Ç–æ –≤–∏–¥–µ–æ, —á—Ç–æ –≥–æ—Ç–æ–≤ –µ—â–µ —Ä–∞–∑ –æ –Ω–µ–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å, –µ—Å–ª–∏ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ —Å–µ–π—á–∞—Å.",
#         reply_markup=builder.as_markup())

