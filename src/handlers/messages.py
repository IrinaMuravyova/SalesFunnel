from aiogram import Router, F
from aiogram import types
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()

@router.message(Command("start"))
async def start_handler(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞ —Å–≤—è–∑–∏ –ë–µ–±—Ä–∏—Å",
        callback_data="step1_1"),
        types.InlineKeyboardButton(
        text="–î–∞–ª—å—à–µ",
        callback_data="step1_2")
    )
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üéâ –ï—Å–ª–∏ —Ç—ã –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç, —Ç—ã –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º! üá¨üáß –ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç? ü§ñ –û–Ω –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–º–æ–∂–µ—Ç –∑–∞–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —É–∂–µ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–∫–∞, –Ω–æ –∏ –ø–æ–¥–±–µ—Ä—ë—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –ø–æ–¥—Ö–æ–¥—è—â—É—é –∏–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è! ‚ú® –¢–∞–∫ —Ç—ã —Å–º–æ–∂–µ—à—å –¥–æ–≤–µ—Å—Ç–∏ —Å–≤–æ–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–º–∞! üöÄ",
        reply_markup=builder.as_markup())

@router.callback_query(F.data == "step1_1")
async def send_random_value(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–•–æ—á—É",
        callback_data="step2")
    )
    await callback.message.edit_text(
        text="–ü—Ä–∏–≤–µ—Ç! üåå –ù–∞ —Å–≤—è–∑–∏ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ë–µ–±—Ä–∏—Å –∏ –º–æ–π –ø—Ä–æ–µ–∫—Ç ‚ÄúEnglish Galaxy‚Äù üå†. –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! ü§ù –î–∞–ª–µ–µ —è —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–≤–æ–±–æ–¥–Ω–æ –∑–∞–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º! üöÄ –°–∞–º–æ–µ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ: –Ω–∞—à–∞ –º–µ—Ç–æ–¥–∏–∫–∞ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–∞ –∏ –ø—Ä–æ—Å—Ç–∞, —á—Ç–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –±—É–¥—Ç–æ —Å–∞–º —É—Å–≤–æ–∏—Ç—Å—è —É —Ç–µ–±—è! ‚ú® –ù–æ –ø–æ–º–Ω–∏: —Ç–≤–æ–∏ –±–æ–ª—å—à–∏–µ —É—Å–∏–ª–∏—è –∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è - –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É! üí™",
        reply_markup=builder.as_markup()
    )
    # await callback.message.edit_reply_markup()
    # await callback.message.answer(
    #     text="–ù–∞ —Å–≤—è–∑–∏ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ë–µ–±—Ä–∏—Å –∏ –º–æ–π –ø—Ä–æ–µ–∫—Ç ‚ÄúEnglish Galaxy‚Äù. –Ø –ü—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∏ –ø–æ—Ç–æ–º —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ, –∫–∞–∫ —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –∑–∞–≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞  –∞–Ω–≥–ª–∏–π—Å–∫–æ–º! –°–∞–º–æ–µ –∫—Ä—É—Ç–æ–µ, —á—Ç–æ –º–µ—Ç–æ–¥–∏–∫–∞ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç–∞—è, —á—Ç–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –±—É–¥–µ—Ç —É—Å–≤–∞–∏–≤–∞—Ç—å—Å—è —Å–∞–º! –ù–æ —Ç–µ–±–µ –Ω–∞–¥–æ –ø—Ä–∏–ª–æ–∂–∏—Ç—å —É—Å–∏–ª–∏—è –∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è!",
    #     reply_markup=builder.as_markup(),
    #     show_alert=True
    # )
    await callback.answer()

@router.callback_query(F.data == "step1_2") 
async def send_message_to_step2(callback: types.CallbackQuery): 
    
    name = callback.message.from_user.first_name
    
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–•–æ—á—É",
        callback_data="step2")
    )
    await callback.message.edit_reply_markup()
    await callback.message.answer(
        text=f"–ü—Ä–∏–≤–µ—Ç, <b>{name}</b>!  üåü –ï—Å–ª–∏ —Ç—ã –º–µ—á—Ç–∞–µ—à—å —Å–≤–æ–±–æ–¥–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, —É—Å–ø–µ—à–Ω–æ —Å–¥–∞—Ç—å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã üìú, –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∂–∏–∑–Ω—å –≤ –∞–Ω–≥–ª–æ–≥–æ–≤–æ—Ä—è—â–µ–π —Å—Ç—Ä–∞–Ω–µ üåç, –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –±–µ–∑ —è–∑—ã–∫–æ–≤—ã—Ö –±–∞—Ä—å–µ—Ä–æ–≤ ‚úàÔ∏è –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏ üíº - —Ç—ã –≤ –Ω—É–∂–Ω–æ–º –º–µ—Å—Ç–µ! –í—Å–µ–≥–æ –∑–∞ 4 –∫–æ—Ä–æ—Ç–∫–∏—Ö —É—Ä–æ–∫–∞ üìö —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –æ–±—â–∞—Ç—å—Å—è –Ω–∞ –±–∞–∑–æ–≤–æ–º –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π - —ç—Ç–æ –ø—Ä–æ—â–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è, –∫–æ–≥–¥–∞ —É —Ç–µ–±—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏ –º–µ—Ç–æ–¥–∏–∫–∞ üöÄ. –ú—ã –ø–æ–±–µ—Ä–µ–º –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–ª—è —Ç–µ–±—è —Ñ–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è –∏ —Å–æ—Å—Ç–∞–≤–∏–º –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–≤–µ–¥–µ—Ç —Ç–µ–±—è –∫ –∂–µ–ª–∞–µ–º–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏! üí™",
        reply_markup=builder.as_markup(),
        show_alert=True,
        callback_data="step2"
    )
    await callback.answer()

@router.callback_query(F.data == "step2")
async def send_message_to_step3(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ",
        callback_data="step3")
    )
    await callback.message.edit_text(
        text="–ü–æ –Ω–∞—à–µ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –º–µ—Ç–æ–¥–∏–∫–µ üìö —É—á–∞—Ç—Å—è –º–∏–ª–ª–∏–æ–Ω—ã —É—á–µ–Ω–∏–∫–æ–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É üåç! –ò –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –º—ã –ø–æ–ª—É—á–∞–µ–º —Å–æ—Ç–Ω–∏ –æ—Ç–∑—ã–≤–æ–≤ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ üíå. –õ—é–¥–∏ –¥–µ–ª—è—Ç—Å—è —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª—è—é—â–∏–º–∏ —É—Å–ø–µ—Ö–∞–º–∏ –∏ —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç –æ—Å–≤–æ–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞! üéâ. ",
        reply_markup=builder.as_markup()
    )
    await callback.answer()

@router.callback_query(F.data == "step3")
async def send_message_to_step4(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ó–¥–æ—Ä–æ–≤–æ!",
        callback_data="step4")
    )
    await callback.message.edit_text(
        text="–ü—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏—è—Ö üìÖ –≤—Å–µ–≥–æ –∑–∞ –ø–æ–ª–≥–æ–¥–∞ –Ω–∞—à–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã –¥–æ—Å—Ç–∏–≥–∞—é—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–≥–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ üó£Ô∏è. –ê –∑–∞ –≥–æ–¥ –æ–Ω–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—è—Ç—Å—è –∫ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —ç–∫–∑–∞–º–µ–Ω–∞–º üìú, –Ω–æ –∏ —É—Å–ø–µ—à–Ω–æ —Å–¥–∞—é—Ç –∏—Ö, –ø–æ–ª—É—á–∞—è –≤—ã—Å–æ–∫–∏–µ –±–∞–ª–ª—ã! üåüüéì",
        reply_markup=builder.as_markup()
    )
    await callback.answer()

@router.callback_query(F.data == "step4")
async def send_message_to_step5(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    # builder.add(types.InlineKeyboardButton(
    #     text="<17",
    #     callback_data="step5"),
    #     types.InlineKeyboardButton(
    #     text="17-22",
    #     callback_data="step5"),
    #     types.InlineKeyboardButton(
    #     text="23-29",
    #     callback_data="step5"),
    #     types.InlineKeyboardButton(
    #     text="30-39",
    #     callback_data="step5"),
    #     types.InlineKeyboardButton(
    #     text="40-49",
    #     callback_data="step5"),
    #     types.InlineKeyboardButton(
    #     text="50-59",
    #     callback_data="step5"),
    #     types.InlineKeyboardButton(
    #     text="60<",
    #     callback_data="step5")
    # )
    builder.row(types.InlineKeyboardButton(
        text="<17",
        callback_data="step5"))
    builder.row(types.InlineKeyboardButton(
        text="17-22",
        callback_data="step5"),
        types.InlineKeyboardButton(
        text="23-29",
        callback_data="step5"),
        types.InlineKeyboardButton(
        text="30-39",
        callback_data="step5"))
    builder.row(types.InlineKeyboardButton(
        text="40-49",
        callback_data="step5"),
        types.InlineKeyboardButton(
        text="50-59",
        callback_data="step5"))
    builder.row(types.InlineKeyboardButton(
        text="60<",
        callback_data="step5"))
    
    await callback.message.edit_text(
        text="ü§ù –ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è! üåü –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ, —è –æ—á–µ–Ω—å —Ö–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ —Ç–µ–±–µ –∏ –∫–∞–∫–∏–µ —É —Ç–µ–±—è —Ü–µ–ª–∏ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ! üìù"
        )
    await callback.message.answer(
        text="–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?",
        reply_markup=builder.as_markup(),
        show_alert=True
    )
    await callback.answer()
    

@router.callback_query(F.data == "step5")
async def send_message_to_step6(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(
        text="–î–ª—è —Ä–∞–±–æ—Ç—ã –≤ it",
        callback_data="step6")),
    builder.row(types.InlineKeyboardButton(
        text="–î–ª—è —Ä–∞–±–æ—Ç—ã –≤ –æ—Ñ–∏—Å–µ",
        callback_data="step6")),
    builder.row(types.InlineKeyboardButton(
        text="–î–ª—è —Ä–∞–±–æ—Ç—ã –≤ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏",
        callback_data="step6")),
    builder.row(types.InlineKeyboardButton(
        text="–î–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø–æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏",
        callback_data="step6")),
    builder.row(types.InlineKeyboardButton(
        text="–î–ª—è —É—á–µ–±—ã",
        callback_data="step6")),
    builder.row(types.InlineKeyboardButton(
        text="–î–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π",
        callback_data="step6")),
    builder.row(types.InlineKeyboardButton(
        text="–î–ª—è –∏–º–º–∏–≥—Ä–∞—Ü–∏–∏ –≤ –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω—É",
        callback_data="step6")),
    builder.row(types.InlineKeyboardButton(
        text="–î–ª—è —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è",
        callback_data="step6")),
    builder.row(types.InlineKeyboardButton(
        text="–î–ª—è —á—Ç–µ–Ω–∏—è –∫–Ω–∏–≥ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∏–ª—å–º–æ–≤",
        callback_data="step6")),
    builder.row(types.InlineKeyboardButton(
        text="–î—Ä—É–≥–æ–µ",
        callback_data="step6")
    )
    await callback.message.edit_text(
        text="–°–∫–∞–∂–∏, –¥–ª—è —á–µ–≥–æ —Ç—ã —É—á–∏—à—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π?",
        reply_markup=builder.as_markup()
        )
    await callback.answer()

@router.callback_query(F.data == "step6")
async def send_message_to_step7(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–î–∞–≤–∞–π",
        callback_data="step7")
    )
    await callback.message.edit_text(
        text="–†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è. –î–∞–≤–∞–π —Ç–µ–ø–µ—Ä—å —è –Ω–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∂—É –æ —Å–µ–±–µ.",
        reply_markup=builder.as_markup()
        )
    await callback.answer()

@router.callback_query(F.data == "step7")
async def send_message_to_step8(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–í–∞—É! 2 –º–∏–ª–ª–∏–æ–Ω–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤! ",
        callback_data="step8")
    )
    await callback.message.edit_text(
        text="üé• –í–æ–∑–º–æ–∂–Ω–æ, —Ç—ã —É–∂–µ –≤–∏–¥–µ–ª –º–µ–Ω—è –Ω–∞ YouTube? –£ –º–µ–Ω—è —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –∫–∞–Ω–∞–ª –ø–æ –∏–∑—É—á–µ–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–º YouTube —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π –≤ 2 –º–ª–Ω. –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤! üåü –ù–æ –≤ —á–µ–º —Å–µ–∫—Ä–µ—Ç —Ç–∞–∫–æ–π –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏? ü§î",
        reply_markup=builder.as_markup()
        )
    await callback.answer()

@router.callback_query(F.data == "step8")
async def send_message_to_step9(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ö—Ä—É—Ç–æ!",
        callback_data="step9")
    )
    await callback.message.edit_text(
        text="üìö –ù–∞ –º–æ–µ–º YT-–∫–∞–Ω–∞–ª–µ —Ç—ã –Ω–∞–π–¥–µ—à—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –ø–æ –∏–∑—É—á–µ–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ, –Ω–æ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–µ! üöÄ ",
        reply_markup=builder.as_markup()
        )
    await callback.answer()

@router.callback_query(F.data == "step9")
async def send_message_to_step10(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–û–≥–æ!",
        callback_data="step10")
    )
    await callback.message.edit_text(
        text='üåü –Ø –æ–±—É—á–∞—é —É–∂–µ 20 –ª–µ—Ç, –ø—Ä–æ–≤–µ–ª –±–æ–ª–µ–µ 10 000 –∂–∏–≤—ã—Ö —É—Ä–æ–∫–æ–≤ –∏ –∑–∞–ø–∏—Å–∞–ª —Å—Ç–æ–ª—å–∫–æ –∂–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤ –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É! üé• –ú–æ—è –º–µ—Ç–æ–¥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–µ–º: –º–∏–ª–ª–∏–æ–Ω—ã —É—á–µ–Ω–∏–∫–æ–≤ –∏–∑—É—á–∞—é—Ç –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏–º–µ–Ω–Ω–æ –ø–æ –Ω–µ–π, –∏ –¥–µ—Å—è—Ç–∫–∏ —Ç—ã—Å—è—á –∏–∑ –Ω–∏—Ö –¥–æ—Å—Ç–∏–≥–∞—é—Ç –ø–æ—Ç—Ä—è—Å–∞—é—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ üöÄ - –æ—Ç —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –¥–æ —É—Å–ø–µ—à–Ω–æ–π —Å–¥–∞—á–∏ –ï–ì–≠, –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —ç–∫–∑–∞–º–µ–Ω–æ–≤ –∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∑–∞—Ä—É–±–µ–∂–Ω—ã–µ –≤—É–∑—ã. üéì –°–æ—Ç–Ω–∏ —Ç—ã—Å—è—á –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ –º–æ–µ–º –∫–∞–Ω–∞–ª–µ –∏ –≤ –º–æ–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ "English Galaxy" - –≥–æ–≤–æ—Ä—è—Ç –æ–± —ç—Ç–æ–º! üåå',
        reply_markup=builder.as_markup()
        )
    await callback.answer()

@router.callback_query(F.data == "step10")
async def send_message_to_step11(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ",
        callback_data="step11")
    )
    await callback.message.edit_text(
        text="üîç –ò—Ç–∞–∫, –¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä–µ–π–¥–µ–º –∫ —Å–∞–º–æ–π –º–µ—Ç–æ–¥–∏–∫–µ. –°–µ–≥–æ–¥–Ω—è –∏–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è —è –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –æ—Å–æ–±—ã–π –ø–æ–¥–∞—Ä–æ–∫! üéÅ  –ù–∞ –º–æ–µ–º YT-–∫–∞–Ω–∞–ª–µ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ —á–∞—Å—Ç—å –º–æ–µ–≥–æ –ø–ª–∞—Ç–Ω–æ–≥–æ –∫—É—Ä—Å–∞ - 1–π —É—Ä–æ–∫.",
        reply_markup=builder.as_markup()
        )
    await callback.answer()

@router.callback_query(F.data == "step11")
async def send_message_to_step12(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–•–æ—á—É –∑–Ω–∞—Ç—å",
        callback_data="step12")
    )
    await callback.message.edit_text(
        text="–ü–æ—á–µ–º—É —Ç–∞–∫ –≤–∞–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —ç—Ç–æ—Ç —É—Ä–æ–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é?",
        reply_markup=builder.as_markup()
        )
    await callback.answer()

@router.callback_query(F.data == "step12")
async def send_message_to_step13(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–í–∞—É! –ö–ª–∞—Å—Å–Ω–æ",
        callback_data="step13")
    )
    await callback.message.edit_text(
        text="üåü –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–∫–∞ —Ç—ã –Ω–∞—á–Ω–µ—à—å –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ –ø–æ–π–º–µ—à—å –±–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –¢—ã —É–≤–∏–¥–∏—à—å, —á—Ç–æ –∏–∑—É—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–µ–≥–∫–∏–º, –∏ —É –Ω–∞—Å –Ω–µ—Ç –ø–µ—Ä–µ–ø–ª–∞—Ç—ã –∑–∞ –∫–∞—á–µ—Å—Ç–≤–æ! üí¨üí∏",
        reply_markup=builder.as_markup()
        )
    await callback.answer()

@router.callback_query(F.data == "step13")
async def send_message_to_step14(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–£—Ä–æ–∫ 1 ",
        callback_data="step14")
    )
    await callback.message.edit_text(
        text="–ü—Ä–µ–¥–ª–∞–≥–∞—é —É–∂–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ 1 —É—Ä–æ–∫—É! ",
        reply_markup=builder.as_markup()
        )
    await callback.answer()

@router.callback_query(F.data == "step14")
async def send_message_to_step15(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–£–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω",
        callback_data="step15"),
        types.InlineKeyboardButton(
        text="–ü–æ–¥–ø–∏—Å–∞–ª—Å—è",
        callback_data="step15")
    )
    await callback.message.edit_text(
        text="–ù–æ —á—Ç–æ–±—ã –æ–±—É—á–µ–Ω–∏–µ –±—ã–ª–æ —Ç–æ—á–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–º - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞ —É—Ä–æ–∫–æ–º!",
        reply_markup=builder.as_markup()
        )
    await callback.answer()

@router.callback_query(F.data == "step15")
async def send_message_to_step16(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ù–∞—á–∞—Ç—å —É—Ä–æ–∫",
        callback_data="lessons")
    )
    await callback.message.edit_text(
        text="üåü –û—Ç–ª–∏—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ! –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫—Ä–æ–µ—Ç –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π –º–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–æ–≤ –≤ –∂–∏–∑–Ω–∏! üö™‚ú®",
        reply_markup=builder.as_markup()
        )
    await callback.answer()

