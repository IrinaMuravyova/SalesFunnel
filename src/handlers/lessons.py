from aiogram import F
from aiogram import types
from aiogram.types import URLInputFile, Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from .reminders import remind_to_watch_this
from config import video_lessons, texts_for_lessons
from loader import router_lessons, db, bot
import time
from aiogram.filters import Command
from asyncio import Lock
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from .fsm import Quiz

# # –∫–ª–∞—Å—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
# class Step(StatesGroup):
#     ask = State()
#     answer = State()

# –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –≤–∏–¥–µ–æ —É—Ä–æ–∫–∞
@router_lessons.callback_query(F.data == "lesson_1")
async def send_lesson_1(callback: types.CallbackQuery):
    
    video_id = 0 
    video = video_lessons[video_id]
    db.set_video_id(video_id=video_id, id = callback.from_user.id)
    callback.message.delete

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ —Å—Å—ã–ª–∫–µ
    video_from_url = URLInputFile(video)
    callback.message.video
    await callback.message.answer_video(
        video= video_from_url,
        caption=" "
    )

    text = texts_for_lessons[video_id]
    await callback.message.answer(text=text)
    callback.answer()

    db.set_status(status_id=1, id = callback.from_user.id) # —É—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω

    await remind_to_watch_this(callback)

# —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–º–æ—Ç—Ä–µ–ª –ø—Ä–µ–¥—ã–¥—É—â–∏–π —É—Ä–æ–∫
@router_lessons.callback_query(F.data == "lesson_2")
async def before_lesson_2(callback: types.CallbackQuery):
    db.set_status(status_id=3, id = callback.from_user.id) # –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ —É–∂–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ
    # print(f"index video = {video_lessons.index(video_lessons[db.get_video_id_from_user(id = callback.from_user.id)])}")
    callback.message.delete
    text = "<b>–°—É–ø–µ—Ä! –¢—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏!</b>\n\n–í–∏–∂—É —Ç–≤–æ—é –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ!\n\n<b>–î–µ—Ä–∂–∏ –≤—Ç–æ—Ä–æ–µ –≤–∏–¥–µ–æ! üé•</b>\n\n"
    callback.message.delete
    await callback.message.answer(text = text)
    # print(f"I'M HERE")
    # time.sleep(2)
    await send_lesson_2(callback=callback)
    
    # match db.get_video_id_from_user(id = callback.from_user.id)+1:
    #     case 1: 
    #         text = "<b>–°—É–ø–µ—Ä! –¢—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏!</b>\n\n–í–∏–∂—É —Ç–≤–æ—é –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ!\n\n<b>–î–µ—Ä–∂–∏ –≤—Ç–æ—Ä–æ–µ –≤–∏–¥–µ–æ! üé•</b>\n\n"
    #         callback.message.delete
    #         await callback.message.answer(text = text)
    #         print(f"I'M HERE")
    #         time.sleep(2)
    #         send_lesson_2(callback=callback)
    #     case 2: 
    #         text1 = "üåü <b>–ö–∞–∫ —Ç–æ–ª—å–∫–æ –∑–∞–∫–æ–Ω—á–∏—à—å, –¥–∞–π –∑–Ω–∞—Ç—å! </b>\n\n–û—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±—è —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ! üé•"
    #         builder = InlineKeyboardBuilder()
    #         builder.add(
    #             types.InlineKeyboardButton(
    #             text=" –í—Å–µ –≥–æ—Ç–æ–≤–æ! –î–∞–≤–∞–π –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ!",
    #             callback_data="lesson_3"))
    #         callback.message.delete
    #         await callback.message.answer(text = text1, reply_markup=builder.as_markup())

    #         time.sleep(2)
    #     case 3:
    #         callback.message.answer(text="üåü –ö–∞–∫ —Ç—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å –ø–µ—Ä–≤—ã–µ 3 —É—Ä–æ–∫–∞?\n\n–¢—ã —É–∂–µ —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ —É—Å–∏–ª–∏–≤–∞–µ—Ç—Å—è —Ç–≤–æ–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π!\n\n<b>–°–∫–∞–∂–∏ –º–Ω–µ:</b> \n\n<i>Where are you from?</i>")
    #         print(f"callback.message.text= {callback.message.text}")
    #         # –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å—â–∑–æ–≤–∞—Ç–µ–ª—è
    #         answer = bot.get_chat
    #         print(f"get_chat = {answer}")
    #         builder = InlineKeyboardBuilder()
    #         builder.add(
    #             types.InlineKeyboardButton(
    #             text=" –î–∞",
    #             callback_data=""),
    #             types.InlineKeyboardButton(
    #             text=" –î–∞–≤–∞–π –ø–µ—Ä–µ–¥–æ—Ö–Ω–µ–º",
    #             callback_data=""))
    #         await callback.message.delete
    #         await callback.message.answer(text= "üöÄ –û—Ç–ª–∏—á–Ω–æ! \n\n<b>–ì–æ—Ç–æ–≤ –∫ 4-–º—É, –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–º—É –∏ —Å–∞–º–æ–º—É —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–º—É –≤–∏–¥–µ–æ? </b>\n\n–í –ù–ï–ú –¢–´:\n\n1) –æ—Å–≤–æ–∏—à—å –∏—Å–∫—É—Å—Å—Ç–≤–æ –¥–∏–∞–ª–æ–≥–∞ üó£\n\n2) –ø—Ä–µ–æ–¥–æ–ª–µ–µ—à—å —è–∑—ã–∫–æ–≤–æ–π –±–∞—Ä—å–µ—Ä üåê\n\n3) –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—à—å —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å üìö",
    #                                       reply_markup=builder.as_markup())
    #     case 4: pass

    # await send_lesson(callback = callback)

# –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ –≤–∏–¥–µ–æ —É—Ä–æ–∫–∞
# @router_lessons.callback_query(F.data == "lessons")
# @router_lessons.callback_query(Command("send"))
async def send_lesson_2(callback: types.CallbackQuery):

    video_id = 1#db.get_video_id_from_user(id = callback.from_user.id)
    video = video_lessons[video_id]
    db.set_video_id(video_id=video_id, id = callback.from_user.id)

    callback.message.delete

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ —Å—Å—ã–ª–∫–µ
    video_from_url = URLInputFile(video)
    callback.message.video
    await callback.message.answer_video(
        video= video_from_url,
        caption=" "
    )

    text = texts_for_lessons[video_id]
    await callback.message.answer(text=text)
    callback.answer()

    db.set_status(status_id=1, id = callback.from_user.id) # —É—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω

    time.sleep(10) # 20 –º–∏–Ω
    
    text1 = "üåü <b>–ö–∞–∫ —Ç–æ–ª—å–∫–æ –∑–∞–∫–æ–Ω—á–∏—à—å, –¥–∞–π –∑–Ω–∞—Ç—å! </b>\n\n–û—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ! üé•"
    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
        text=" –í—Å–µ –≥–æ—Ç–æ–≤–æ! –î–∞–≤–∞–π –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ!",
        callback_data="lesson_3"))
    callback.message.delete
    await callback.message.answer(text = text1, reply_markup=builder.as_markup())

    # time.sleep(2)

    # await send_next_lesson(callback=callback)


@router_lessons.callback_query(F.data == "lesson_3")
async def send_lesson_3(callback: types.CallbackQuery, state = None):

    text = "üåü –û–¢–õ–ò–ß–ù–û!\n\n<b>–¢—ã –º–æ–ª–æ–¥–µ—Ü –∏ —É–∂–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏. </b>\n\n–Ø —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ç–≤–æ–∏ —É—Å–∏–ª–∏—è –ø—Ä–∏–Ω–µ—Å—É—Ç –ø–ª–æ–¥—ã! \n\n<b>–ß–µ—Ä–µ–∑ 2 –º–µ—Å—è—Ü–∞ —Ç—ã –±—É–¥–µ—à—å —Å–≤–æ–±–æ–¥–Ω–æ –æ–±—â–∞—Ç—å—Å—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º! üó£</b>"
    await callback.message.answer(text = text)
    # await send_lesson(callback = callback)
    video_id = 2#db.get_video_id_from_user(id = callback.from_user.id)
    video = video_lessons[video_id]
    db.set_video_id(video_id=video_id, id = callback.from_user.id)

    callback.message.delete

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ —Å—Å—ã–ª–∫–µ
    video_from_url = URLInputFile(video)
    callback.message.video
    await callback.message.answer_video(
        video= video_from_url,
        caption=" "
    )

    text = texts_for_lessons[video_id]
    await callback.message.answer(text=text)
    callback.answer()

    db.set_status(status_id=1, id = callback.from_user.id) # —É—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω

    time.sleep(10) # 20 –º–∏–Ω

    await callback.message.answer(text="üåü –ö–∞–∫ —Ç—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å –ø–µ—Ä–≤—ã–µ 3 —É—Ä–æ–∫–∞?\n\n–¢—ã —É–∂–µ —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ —É—Å–∏–ª–∏–≤–∞–µ—Ç—Å—è —Ç–≤–æ–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π!\n\n<b>–°–∫–∞–∂–∏ –º–Ω–µ:</b> \n\n<i>Where are you from?</i>")
    # print(f"callback.message.text= {callback.message.text}")
    # –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.set_state(Quiz.ask)
    await get_answer(message=callback.message)

    # await get_answer(message=callback.message)

    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
        text=" –î–∞",
        callback_data="lesson_4"),
        types.InlineKeyboardButton(
        text=" –î–∞–≤–∞–π –ø–µ—Ä–µ–¥–æ—Ö–Ω–µ–º",
        callback_data="wait"))
    callback.message.delete
    await callback.message.answer(text= "üöÄ –û—Ç–ª–∏—á–Ω–æ! \n\n<b>–ì–æ—Ç–æ–≤ –∫ 4-–º—É, –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–º—É –∏ —Å–∞–º–æ–º—É —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–º—É –≤–∏–¥–µ–æ? </b>\n\n–í –ù–ï–ú –¢–´:\n\n1) –æ—Å–≤–æ–∏—à—å –∏—Å–∫—É—Å—Å—Ç–≤–æ –¥–∏–∞–ª–æ–≥–∞ üó£\n\n2) –ø—Ä–µ–æ–¥–æ–ª–µ–µ—à—å —è–∑—ã–∫–æ–≤–æ–π –±–∞—Ä—å–µ—Ä üåê\n\n3) –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—à—å —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å üìö",
                                    reply_markup=builder.as_markup())
    
# @router_lessons.callback_query(content_types=types.ContentType.TEXT, state=Step.ask)
async def get_answer(message: types.Message, state = None):
    await state.set_state(Quiz.answer)
    await state.update_data(text=message.text)
    print(f"callback.message.text = {message.text}")

@router_lessons.callback_query(F.data == "lesson_4")#, state=Step.answer)
async def send_lesson_3(callback: types.CallbackQuery):

    text = "<b>–ö–ª–∞—Å—Å! üëç</b>\n\n–ú–µ–Ω—è —Ä–∞–¥—É–µ—Ç —Ç–≤–æ–µ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ! üòä"
    await callback.message.answer(text = text)
    # await send_lesson(callback = callback)
    video_id = 3#db.get_video_id_from_user(id = callback.from_user.id)
    video = video_lessons[video_id]
    db.set_video_id(video_id=video_id, id = callback.from_user.id)

    callback.message.delete

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ —Å—Å—ã–ª–∫–µ
    video_from_url = URLInputFile(video)
    callback.message.video
    await callback.message.answer_video(
        video= video_from_url,
        caption=" "
    )

    text = texts_for_lessons[video_id]
    await callback.message.answer(text=text)
    callback.answer()

    db.set_status(status_id=1, id = callback.from_user.id) # —É—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω

    time.sleep(10) # 25 –º–∏–Ω

    builder = InlineKeyboardBuilder()
    builder.add(
        types.InlineKeyboardButton(
        text="–Ø —Ä–µ–∞–ª—å–Ω–æ —É–∂–µ –º–æ–≥—É –Ω–µ–º–Ω–æ–≥–æ –≥–æ–≤–æ—Ä–∏—Ç—å",
        callback_data=""),
        types.InlineKeyboardButton(
        text="–ú–Ω–µ –Ω–∞–¥–æ –ø—Ä–æ–π—Ç–∏ –µ–≥–æ –µ—â–µ —Ä–∞–∑ –∏ –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è!",
        callback_data=""),
        types.InlineKeyboardButton(
        text="–ú–Ω–µ –±—ã–ª–æ –æ—á–µ–Ω—å –º–∞–ª–æ! –Ø —Ö–æ—á—É –µ—â–µ!",
        callback_data=""))
    callback.message.delete
    await callback.message.answer(text= "üåü –ö–∞–∫ —Ç–µ–±–µ —É—Ä–æ–∫–∏? \n\n–û—â—É—â–∞–µ—à—å –ø—Ä–æ–≥—Ä–µ—Å—Å?",
                                    reply_markup=builder.as_markup())